% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCMFit.R
\name{PCMFit}
\alias{PCMFit}
\title{Fitting a PCM model}
\usage{
PCMFit(
  X,
  tree,
  model,
  SE = matrix(0, PCMNumTraits(model), PCMTreeNumTips(tree)),
  metaI = PCMInfo(X, tree, model, SE),
  positiveValueGuard = Inf,
  argsPCMParamLowerLimit = NULL,
  argsPCMParamUpperLimit = NULL,
  matParInit = NULL,
  numRunifInitVecParams = if (is.null(matParInit)) 1000L else 0L,
  numGuessInitVecParams = if (is.null(matParInit)) 100L else 0L,
  numCallsOptim = 10L,
  control = NULL,
  doParallel = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{X}{a \code{k x N} numerical matrix with possible \code{NA} and
\code{NaN} entries. For \code{i=1,..., N}, the column \code{i} of X contains
the measured trait values for species \code{i} (the tip with integer
identifier equal to \code{i} in \code{tree}). Missing values can be either
not-available (\code{NA}) or not existing (\code{NaN}). These two values are
treated differently when calculating likelihoods (see
\code{\link[PCMBase]{PCMPresentCoordinates}}).}

\item{tree}{a phylo object with N tips.}

\item{model}{an S3 object specifying both, the model type (class, e.g. "OU") as
well as the concrete model parameter values at which the likelihood is to be
calculated (see also Details).}

\item{SE}{a k x N matrix specifying the standard error for each measurement in
X. Alternatively, a k x k x N cube specifying an upper triangular k x k
factor of the variance covariance matrix for the measurement error
for each tip \code{i=1, ..., N}. When \code{SE} is a matrix, the k x k
measurement error variance matrix for a tip \code{i} is calculated as
\code{VE[, , i] <- diag(SE[, i] * SE[, i], nrow = k)}. When \code{SE} is a
cube, the way how the measurement variance matrix for a tip \code{i} is
calculated depends on the runtime option \code{PCMBase.Transpose.Sigma_x}
as follows:
\describe{
\item{if \code{getOption("PCMBase.Transpose.Sigma_x", FALSE) == FALSE} (default): }{VE[, , i] <- SE[, , i] \%*\% t(SE[, , i])}
\item{if \code{getOption("PCMBase.Transpose.Sigma_x", FALSE) == TRUE}: }{VE[, , i] <- t(SE[, , i]) \%*\% SE[, , i]}
}
Note that the above behavior is consistent with the treatment of the model
parameters \code{Sigma_x}, \code{Sigmae_x} and \code{Sigmaj_x}, which are
also specified as upper triangular factors.
Default: \code{matrix(0.0, PCMNumTraits(model), PCMTreeNumTips(tree))}.}

\item{metaI}{a list returned from a call to \code{PCMInfo(X, tree, model, SE)},
containing meta-data such as N, M and k. Alternatively, this can be a
character string naming a function or a function object that returns such
a list, e.g. the function\code{PCMInfo} or the function \code{PCMInfoCpp}
from the \code{PCMBaseCpp} package.}

\item{positiveValueGuard}{a real number (not necessarily positive) used during
the fit as a threshold for highly positive but likely incorrect log-likelihood
values. This argument is set to \code{Inf} by default and should be used only
as a last escape. The recommended way to of preventing such numerical errors
is by setting more stringent values for the runtime options
\code{PCMBase.Threshold.EV} and \code{PCMBase.Threshold.SV} (see
\code{\link{PCMOptions}}).}

\item{argsPCMParamLowerLimit, argsPCMParamUpperLimit}{named lists with
arguments passed to the functions \code{\link{PCMParamLowerLimit}} and
\code{\link{PCMParamUpperLimit}}, respectively. Default: \code{NULL}.}

\item{matParInit}{a matrix of any number of rows and p columns where, p is
the number of variable numerical parameters in the model
(equal to \code{PCMParamCount(model)}). Each row of this matrix specifies a
suggested starting location for the optim L-BFGS-B run. Default: NULL,
meaning that the initial parameters are to be chosen at random and/or using
calls to \code{\link{GuessInitVecParams}} function.}

\item{numRunifInitVecParams, numGuessInitVecParams}{integers specifying how
many parameter vectors should be drawn from a uniform distribution between
\code{PCMParamLowerLimit(model)} and \code{PCMParamUpplerLimit(model)}, and
how many parameter vectors should be generated by jittering the resulting
vector from a  call to \code{\link{GuessInitVecParams}}. Before starting the
optimization the model likelihood is evaluated at each of these vectors and
the top \code{numCallsOptim} vectors are chosen for starting locations for
optimization. The default settings are
\code{numRunifInitVecParams = if( is.null(matParInit) ) 1000L else 0L} and
\code{numGuessInitVecParams = if( is.null(matParInit) ) 100L else 0L}.}

\item{numCallsOptim}{integer specifying the maximum number of calls to
\code{\link{optim}} function. Default: 10. Note that this parameter would be
overwritten by a smaller \code{nrow(matParInit)} (if \code{matParInit} is
specified) or by a smaller number of generated initial parameter vectors that
satisfy the parameter limits (see also the arguments
\code{numRunifInitVecParams,numGuessInitVecParams} and
\code{argsPCMParamLowerLimit}, \code{argsPCMParamUpperLimit}).}

\item{control}{a list passed as control argument to \code{\link{optim}}.
Default: NULL.}

\item{doParallel}{logical indicating if optim calls should be executed in
parallel. Default: FALSE.}

\item{verbose}{logical indicating if information messages should be printed
to the console while running. Default: FALSE.}
}
\value{
an object of class PCMFit
}
\description{
Fitting a PCM model
}
\references{
Mitov, V., Bartoszek, K., & Stadler, T. (2019). Automatic generation of
 evolutionary hypotheses using mixed Gaussian phylogenetic models.
 Proceedings of the National Academy of Sciences of the United States of
 America, 35, 201813823. http://doi.org/10.1073/pnas.1813823116

Mitov, V., Bartoszek, K., Asimomitis, G., & Stadler, T. (2019). Fast
 likelihood calculation for multivariate Gaussian phylogenetic models with
 shifts. Theoretical Population Biology.
 http://doi.org/10.1016/j.tpb.2019.11.005
}
\seealso{
\code{\link{PCMFitMixed}} \code{\link{PCMOptions}}
}
