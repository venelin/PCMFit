% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Defaults.R
\name{DefaultArgsConfigOptim}
\alias{DefaultArgsConfigOptim}
\title{Specify arguments for PCMFit during calls to PCMFitMixed.}
\usage{
DefaultArgsConfigOptim(
  matParInit = NULL,
  argsPCMParamLowerLimit = NULL,
  argsPCMParamUpperLimit = NULL,
  numRunifInitVecParams = 1000,
  numGuessInitVecParams = 100,
  numJitterRootRegimeFit = 100,
  sdJitterRootRegimeFit = 0.5,
  numJitterAllRegimeFits = 100,
  sdJitterAllRegimeFits = 0.5,
  numCallsOptim = 10,
  control = list(fnscale = -1)
)
}
\arguments{
\item{matParInit}{a matrix of any number of rows and p columns where, p is
the number of variable numerical parameters in the model
(equal to \code{PCMParamCount(model)}). Each row of this matrix specifies a
suggested starting location for the optim L-BFGS-B run. Default: NULL,
meaning that the initial parameters are to be chosen at random and/or using
calls to \code{\link{GuessInitVecParams}} function.}

\item{argsPCMParamLowerLimit}{named lists with
arguments passed to the functions \code{\link{PCMParamLowerLimit}} and
\code{\link{PCMParamUpperLimit}}, respectively. Default: \code{NULL}.}

\item{argsPCMParamUpperLimit}{named lists with
arguments passed to the functions \code{\link{PCMParamLowerLimit}} and
\code{\link{PCMParamUpperLimit}}, respectively. Default: \code{NULL}.}

\item{numRunifInitVecParams}{integers specifying how
many parameter vectors should be drawn from a uniform distribution between
\code{PCMParamLowerLimit(model)} and \code{PCMParamUpplerLimit(model)}, and
how many parameter vectors should be generated by jittering the resulting
vector from a  call to \code{\link{GuessInitVecParams}}. Before starting the
optimization the model likelihood is evaluated at each of these vectors and
the top \code{numCallsOptim} vectors are chosen for starting locations for
optimization. The default settings are
\code{numRunifInitVecParams = if( is.null(matParInit) ) 1000L else 0L} and
\code{numGuessInitVecParams = if( is.null(matParInit) ) 100L else 0L}.}

\item{numGuessInitVecParams}{integers specifying how
many parameter vectors should be drawn from a uniform distribution between
\code{PCMParamLowerLimit(model)} and \code{PCMParamUpplerLimit(model)}, and
how many parameter vectors should be generated by jittering the resulting
vector from a  call to \code{\link{GuessInitVecParams}}. Before starting the
optimization the model likelihood is evaluated at each of these vectors and
the top \code{numCallsOptim} vectors are chosen for starting locations for
optimization. The default settings are
\code{numRunifInitVecParams = if( is.null(matParInit) ) 1000L else 0L} and
\code{numGuessInitVecParams = if( is.null(matParInit) ) 100L else 0L}.}

\item{numJitterRootRegimeFit}{integers specifying how
many initial parameter vectors should be generated by 'jittering' the
parameters of the root regime of a previously found fit
(such as a clade-fit), and by jittering all regime parameters.
Default: \code{100}.}

\item{sdJitterRootRegimeFit}{white noise standard
deviation. Default: \code{0.5}.}

\item{numJitterAllRegimeFits}{integers specifying how
many initial parameter vectors should be generated by 'jittering' the
parameters of the root regime of a previously found fit
(such as a clade-fit), and by jittering all regime parameters.
Default: \code{100}.}

\item{sdJitterAllRegimeFits}{white noise standard
deviation. Default: \code{0.5}.}

\item{numCallsOptim}{integer specifying the maximum number of calls to
\code{\link{optim}} function. Default: 10. Note that this parameter would be
overwritten by a smaller \code{nrow(matParInit)} (if \code{matParInit} is
specified) or by a smaller number of generated initial parameter vectors that
satisfy the parameter limits (see also the arguments
\code{numRunifInitVecParams,numGuessInitVecParams} and
\code{argsPCMParamLowerLimit}, \code{argsPCMParamUpperLimit}).}

\item{control}{a list passed as control argument to \code{\link{optim}}.
Default: NULL.}
}
\value{
a named list of arguments to be passed to PCMFit.
}
\description{
Specify arguments for PCMFit during calls to PCMFitMixed.
}
